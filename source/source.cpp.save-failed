#include "CommonFunction.h"
#include "BaseObject.h"
#include "MainObject.h"
#include "Map.h"
#include "Timer.h"
#include "EnemyObject.h"
#include "Button.h"
#include "FunctionInMain.h"

Button PlayButton(PLAY_BUTON_POSX, PLAY_BUTTON_POSY);
Button PauseButton(PAUSE_BUTTON_POSX, PAUSE_BUTTON_POSY);
Button ContinueButton(CONTINUE_BUTTON_POSX, CONTINUE_BUTTON_POSY);
Button HelpButton(HELP_BUTTON_POSX, HELP_BUTTON_POSY);
Button BackButton(BACK_BUTTON_POSX, BACK_BUTTON_POSY);
Button ExitButton(EXIT_BUTTON_POSX, EXIT_BUTTON_POSY);

TTF_Font* gFont = nullptr;
Mix_Music* gBackgroundMusic = nullptr;
Mix_Music* gMenuMusic = nullptr;
Mix_Chunk* gClickMusic = nullptr;
Mix_Chunk* gJumpMusic = nullptr;
Mix_Chunk* gLoseMusic = nullptr;

BaseObject gInstruction ;
BaseObject gMenu ;

MainObject Dino ;

Map MapData ;

Timer Fps ;

Enemy Ground1(ON_GROUND_ENEMY) ;
Enemy Ground2(ON_GROUND_ENEMY) ;
Enemy Air1(IN_AIR_ENEMY) ;

int main(int argv, char** args)
{
    if(Init() == 0) return 0 ;

    LoadMedia() ;

    bool Quit = 0 ;
    int OffsetSpeedGround = BASE_OFFSET_SPEED ;
    vector <double> offSetSpeedBackGround(BACKGROUND_LAYER, BASE_OFFSET_SPEED);

    int speed = GROUND_SPEED ;
    int acceleration = ENEMY_SPEED ;
    int frame = 0 ;
    Mix_PlayMusic(gMenuMusic, -1) ;
    srand((int)time(NULL)) ;

    bool QuitMenu = false ;
    bool QuitGame = false ;
    bool PlayAgain = false ;

    while(!QuitMenu)
    {
        while(SDL_PollEvent(&gEvent) != 0)
        {
            if(gEvent.type == SDL_QUIT)
            {
                QuitGame = true ;
            }

            HandlePlayButton(&gEvent, PlayButton, QuitMenu, PlayAgain, gClickMusic) ;

            HandleHelpButton(&gEvent, HelpButton, BackButton, QuitGame, gInstruction, gScreen, gClickMusic) ;

            HandleExitButton(&gEvent, ExitButton, QuitGame, gClickMusic) ;

            if(QuitGame)
                return 0 ;
        }

        if(QuitGame)
            return 0 ;
        gMenu.Render(gScreen) ;

        SDL_Rect* currenClip = &PlayButton.frameClip[PlayButton.status] ;
        PlayButton.RenderButton(gScreen) ;

        currenClip = &HelpButton.frameClip[HelpButton.status] ;
        HelpButton.RenderButton(gScreen) ;

        currenClip = &ExitButton.frameClip[ExitButton.status] ;
        ExitButton.RenderButton(gScreen) ;

        SDL_RenderPresent(gScreen) ;
    }


    while(!Quit)
    {
        Fps.start() ;
        while(SDL_PollEvent(&gEvent) != 0)
        {
            if(gEvent.type == SDL_QUIT)
            {
                Quit = 1 ;
            }
            Dino.HandleButton(gEvent, gScreen, gJumpMusic) ;
        }

        SDL_SetRenderDrawColor(gScreen, RENDER_DRAW_COLOR,
        RENDER_DRAW_COLOR, RENDER_DRAW_COLOR, RENDER_DRAW_COLOR) ;
        SDL_RenderClear(gScreen) ;

        MapData.RenderScrollingBackground(offSetSpeedBackGround, gScreen) ;
        MapData.RenderScrollingGround(speed, gScreen) ;

        Dino.Show(gScreen) ;
        int xBack = Ground1.GetXBack() ;
        Ground1.Move(acceleration, 0, 1) ;
        Ground1.RenderEnemy(gScreen) ;
//        if(Ground2.Move(acceleration, xBack, 2))
//        Ground2.RenderEnemy(gScreen) ;

        Air1.Move(acceleration, 0, 0) ;
        Air1.RenderEnemy(gScreen) ;
        SDL_RenderPresent(gScreen) ;

        if(CheckCollision(Dino, Air1) || CheckCollision(Dino, Ground1))
        {
            Mix_PauseMusic();
            Mix_PlayChannel(MIX_CHANNEL, gLoseMusic, 0);
            Quit = 1 ;
        }
        double realTime = Fps.getTick() ;
        double ms = (double)1000 / FRAME_PER_SECOND ;
        if(realTime < ms)
        {
            double delayTime = ms - realTime ;
            SDL_Delay(delayTime) ;
        }

    }
    Close() ;
    return 0 ;
}

bool Init()
{
    int sdlInit = SDL_Init(SDL_INIT_EVERYTHING) ;

    if(sdlInit < 0)
        return 0 ;

    SDL_SetHint(SDL_HINT_RENDER_SCALE_QUALITY, "1") ;

    gWindow = SDL_CreateWindow(GAME_NAME.c_str(), SDL_WINDOWPOS_CENTERED,
    SDL_WINDOWPOS_CENTERED, SCREEN_WIDTH, SCREEN_HEIGHT, SDL_WINDOW_SHOWN) ;

    if(gWindow == NULL)
        return 0 ;

    gScreen = SDL_CreateRenderer(gWindow, -1, SDL_RENDERER_ACCELERATED) ;

    if(gScreen == NULL)
        return 0 ;

    SDL_SetRenderDrawColor(gScreen, RENDER_DRAW_COLOR,
    RENDER_DRAW_COLOR, RENDER_DRAW_COLOR, RENDER_DRAW_COLOR) ;

    int imgFlags = IMG_INIT_PNG;

    if(!(IMG_Init(imgFlags) && imgFlags))
        return 0 ;

    if (Mix_OpenAudio(44100, MIX_DEFAULT_FORMAT, 2, 2048) < 0)
        return 0 ;

    if (TTF_Init() == -1)
        return 0 ;

    return 1 ;
}

bool LoadMedia()
{
    if(!MapData.LoadImgGround("imgs/background/ground.png", gScreen)) return 0 ;
    if(!MapData.LoadImgBackGround(gScreen)) return 0 ;

    if(Dino.LoadImg("imgs/character/Dino.png", gScreen))
        Dino.SetUpFrame() ;

    if(!Ground1.LoadImg(gScreen)) return 0 ;
    if(!Ground2.LoadImg(gScreen)) return 0 ;

    if(Air1.LoadImg(gScreen))
        Air1.SetUpFrame();

    gBackgroundMusic = Mix_LoadMUS("sound/bkgr_audio.wav");
    if(gBackgroundMusic == nullptr) return 0 ;

    gMenuMusic = Mix_LoadMUS("sound/menu_audio.wav");
    if (gMenuMusic == nullptr) return 0 ;

    gClickMusic = Mix_LoadWAV("sound/mouse_click.wav");
    if(gClickMusic == nullptr) return 0 ;

    gJumpMusic = Mix_LoadWAV("sound/jump_sound.wav");
    if(gJumpMusic == nullptr) return 0 ;

    gLoseMusic = Mix_LoadWAV("sound/lose_sound.wav");
    if(gLoseMusic == nullptr) return 0 ;

    gFont = TTF_OpenFont("font/pixel_font.ttf", 28);
    if(gFont == nullptr) return 0 ;

    if(!PlayButton.LoadButton("imgs/button/play_button.png", gScreen))
        return 0 ;
    PlayButton.SetUpFrame() ;

    if(!PauseButton.LoadButton("imgs/button/pause_button.png", gScreen))
        return 0 ;
    PauseButton.SetUpFrame() ;

    if(!ContinueButton.LoadButton("imgs/button/continue_button.png", gScreen))
        return 0 ;
    ContinueButton.SetUpFrame() ;

    if(!HelpButton.LoadButton("imgs/button/help_button.png", gScreen))
        return 0 ;
    HelpButton.SetUpFrame() ;

    if(!BackButton.LoadButton("imgs/button/back_button.png", gScreen))
        return 0 ;
    BackButton.SetUpFrame() ;

    if(!ExitButton.LoadButton("imgs/button/exit_button.png", gScreen))
        return 0 ;
    ExitButton.SetUpFrame() ;

    if(!gInstruction.LoadImg("imgs/background/instruction.png", gScreen))
        return 0 ;

    if(!gMenu.LoadImg("imgs/background/menu.png", gScreen)) ;
        return 0 ;

    return 1 ;
}

void Close()
{

    SDL_DestroyRenderer(gScreen) ;
    gScreen = NULL ;

    SDL_DestroyWindow(gWindow) ;
    gWindow = NULL ;

    IMG_Quit() ;
    SDL_Quit() ;
}
